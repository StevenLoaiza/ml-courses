type: edu
files:
- name: lcm_unit_tests.py
  visible: true
  placeholders:
  - offset: 337
    length: 12
    placeholder_text: type here
    initial_state:
      length: 9
      offset: 337
    initialized_from_dependency: false
    selected: true
    status: Unchecked
  text: |
    import unittest
    from itertools import product
    from lcm import lcm, lcm_naive


    class TestLCM(unittest.TestCase):
        def test_small(self):
            for (a, b) in product(range(1, 15), repeat=2):
                self.assertEqual(lcm(a, b), lcm_naive(a, b))

        def test_large(self):
            for (a, b, m) in [(28851538, 1183019, 1933053046), type here]:
                self.assertEqual(lcm(a, b), m)


    if __name__ == '__main__':
        unittest.main()
  learner_created: false
- name: logo.png
  visible: false
  learner_created: false
- name: tests.py
  visible: false
  text: |
    import math
    from random import randint
    from test_helper import run_common_tests, failed, passed, check_tests_pass
    from lcm import lcm

    if __name__ == '__main__':
        run_common_tests()
        check_tests_pass("lcm_unit_tests.py")

        all_tests_passed = True
        for _ in range(10):
            a, b = randint(1, 10 ** 18), randint(1, 10 ** 18)
            if lcm(a, b) != a * b // math.gcd(a, b):
                all_tests_passed = False
                failed("Wrong answer for a={}, b={}".format(a, b))
                break

            c = randint(1, 10 ** 9)
            a, b = randint(1, 10 ** 9) * c, randint(1, 10 ** 9) * c
            if lcm(a, b) != a * b // math.gcd(a, b):
                all_tests_passed = False
                failed("Wrong answer for a={}, b={}".format(a, b))
                break

        if all_tests_passed:
            passed()
  learner_created: false
- name: lcm.py
  visible: true
  learner_created: true
feedback_link: https://www.coursera.org/learn/algorithmic-toolbox/programming/b66y2/programming-assignment-2-algorithmic-warm-up/discussions
status: Unchecked
feedback:
  message: Local tests passed, please <a href="https://www.coursera.org/learn/algorithmic-toolbox/programming/b66y2/programming-assignment-2-algorithmic-warm-up/submission">submit
    to Coursera</a>
  time: Mon, 29 Nov 2021 02:58:46 UTC
record: -1
